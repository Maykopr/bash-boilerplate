builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
__vsc_prompt_cmd_original
cd freeCodeCamp
__vsc_prompt_cmd_original
pwd
__vsc_prompt_cmd_original
ls --color=auto freeCodeCamp
ls --color=auto
cd test
__vsc_prompt_cmd_original
pwd
ls --color=auto
cd ..
cls
clear
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
more readme.md
more README.md
ls --color=auto
more LICENSE-MIT
clear
ls --color=auto
cd src
pwd
ls --color=auto
more index.js
cd has
cd ..
cd ..
clear
pwd
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website
ls --color=auto
echo hello website
touch index.html
touch styles.css
__vsc_prompt_cmd_original
ls --color=auto
touch index.js
__vsc_prompt_cmd_original
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto -a
cd .
touch background.jpg
clear
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
clear
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
co background.jpg images
cp background.jpg images
cd images
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images
cp footer.jpg images
cp footer.jpeg images
cd images
ls --color=auto
cd ..
ls --color=auto
__vsc_prompt_cmd_original
rm header
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts
clear
find
mv lato.ttf fonts
mv menlo.otf fonts
find
mkdir client
mkdir client/src
mv index.html client/src
clear
find
mv index.js client/src
mv styles.css client/src
find
find client
finde --help
find --help
clear
find -name index.html
find -name styles.css
find -name src
find
cd client
mkdir assets
cd assets
mkdir images
cd images
touch background.jpg
cd ../../..
cd images
ls --color=auto
mv header.png ..
ls --color=auto
cd website
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images
find -name header.png
find -name footer
find -name footer.jpeg
mv images/footer.jpeg client/assets/images
find
rmdir images
mv images/background.jpg client/assets/images
rm images/background.jpg
rmdir images
list
ls --color=auto
touch client/assets/icons
mkdir client/assets/icons
ls --color=auto
cd client
cd client/assets
ls --color=auto
cd assets
ld
ls --color=auto
rm icons
mkdir icons
ls --color=auto
cd ../..
clear
find
mv CodeAlly.svg client/assets/icons
find
mv CodeRoad.svg client/assets/icons
mv freeCodeCamp.svg client/assets/icons
find
mkdir fonts client/assets
find
mkdir client/assets/fonts
touch roboto-bold.woff client/assets/fonts
find
ld
clear
ls --color=auto
rm roboto-bold.woff
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find
clear
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-ttf
rm client/assets/fonts/lato-ttf
touch client/assets/fonts/lato-light.ttf
find
rm --help
rm -r fonts
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line README.md
echo from the comman line >> README.md
ld
clear
ls --color=auto
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd project
cd ..
ls --color=auto
mv website website-boilerplate
ls --color=auto
help
copy --help
cp --help
cp -r website-boilerplate toms-website
ls --color=auto
find toms-website
find website-boilerplate
clear
echo goodbye terminal
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git remote set-url origin https://github.com/Maykopr/bash-boilerplate.git
git remote set-url origin https://github.com/Maykopr/bash-boilerplate.git
git branch -M main
git push -u origin main
git remote add origin https://github.com/Maykopr/bash-boilerplate.git
git branch -M main
git push -u origin main
git config --bool core.bare true
git push -u origin main
git config --bool core.bare true
git push local master
git push -u origin main
git pull origin main
git push -u origin main
git pull --rebase
git pull --rebase origin main
git push -u origin main
git remote -v
rm -rf .git
git init
git remote set-url origin https://github.com/Maykopr/bash-boilerplate.git
git remote add origin https://github.com/Maykopr/bash-boilerplate.git
git branch -M main
git push -u origin main
git commit -m "first commit"
git add .
